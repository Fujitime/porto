---
// Import bagian atas (tidak berubah)
import Header from "../components/Header.astro";
import Footer from "@/components/Footer.astro";
import BlurCircle from "@/components/shared/BlurCircle.astro";
import theme from "@/data/theme";
import SEOTags from "@/components/seo/SEOTags.astro";
import Cookie from "@/components/Cookie.astro";
import "@fontsource/open-sans";
import "@/styles/tailwind.css";
import "@/styles/post.css";

export interface Props {
  title?: string;
}

const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <SEOTags title={title} />
  </head>
  <body
    class="mx-auto flex min-h-screen max-w-[872px] flex-col gap-9
      bg-primary-light text-text-light dark:bg-neutral-950 dark:text-neutral-400
      px-6 md:px-10 py-6 md:py-16 transition-colors duration-300"
  >
    <!-- Konten -->
    <div class="w-full max-w-3xl mx-auto">
      <Header />
    </div>

    <BlurCircle position="top" color={theme.colors.blur.top} />
    <BlurCircle position="bottom" color={theme.colors.blur.bottom} />

    <Cookie />
    <slot />
    <audio id="button-sound" src="/click.mp3" preload="auto" hidden></audio>
    <Footer />

    <!-- Style Global -->
    <style is:global>
      html {
        font-family: "Open Sans";
      }

      body, a, button, div, span, p, h1, h2, h3, h4, h5, h6 {
        transition-property: color, background-color, border-color;
        transition-duration: 300ms;
      }
    </style>

    <!-- Inisialisasi tema gelap -->
    <script>
      const initTheme = () => {
        const savedTheme = localStorage.getItem('theme') || 'dark';
        if (savedTheme === 'dark' || (!savedTheme && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
          document.documentElement.classList.add('dark');
        } else {
          document.documentElement.classList.remove('dark');
        }
      };
      initTheme();
    </script>

<script is:inline>
  document.addEventListener("DOMContentLoaded", () => {
    const audio = document.getElementById("button-sound");
    let isPlaying = false;

    const isInternalLink = (href) =>
      href && href.startsWith("/") && !href.startsWith("//");

    const playClickSound = () => {
      if (!audio || isPlaying) return;
      isPlaying = true;
      const cloned = audio.cloneNode();
      cloned.volume = 1;
      cloned.play().catch(() => {}).finally(() => {
        cloned.onended = () => (isPlaying = false);
        setTimeout(() => (isPlaying = false), 300);
      });
    };

    document.body.addEventListener("click", (e) => {
      const el = e.target.closest("button, a");
      if (!el) return;

      if (e.metaKey || e.ctrlKey || e.shiftKey || e.altKey) return;

      if (el.tagName === "A") {
        const href = el.getAttribute("href");
        if (isInternalLink(href)) {
          e.preventDefault();
          playClickSound();
          setTimeout(() => {
            window.location.href = href;
          }, 100); // kasih delay agar suara sempat main
        } else {
          // external, jangan halangi navigasi
          playClickSound();
        }
      } else {
        playClickSound();
      }
    });

    const unlockAudio = () => {
      audio.play().catch(() => {}).finally(() => {
        audio.pause();
        audio.currentTime = 0;
      });
      document.removeEventListener("click", unlockAudio);
    };
    document.addEventListener("click", unlockAudio, { once: true });
  });
</script>

  </body>
</html>
