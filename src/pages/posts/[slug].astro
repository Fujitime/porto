---
import { CollectionEntry, getCollection } from "astro:content";
import Layout from "@/layouts/Layout.astro";
import formatDate from "@/utils/formatDate";

export async function getStaticPaths() {
  const posts = await getCollection("posts");

  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

type Props = {
  post: CollectionEntry<"posts">;
};

const { post } = Astro.props;
const { Content } = await post.render();
const otherPosts = (await getCollection("posts"))
  .filter((p) => p.slug !== post.slug)
  .slice(0, 3);
---

<Layout title={post.data.title}>
  <main class="post mx-auto flex w-full max-w-prose flex-col gap-8">
    <!-- Header -->
    <header class="mb-4">
      <h1 class="text-2xl font-bold text-text-light dark:text-neutral-100 mb-2">
        {post.data.title}
      </h1>
      <div class="flex items-center gap-2 text-muted-light dark:text-neutral-400 text-sm">
        <time datetime={post.data.publishedAt.toISOString()}>
          {formatDate(post.data.publishedAt)}
        </time>
      </div>
      <p class="italic text-muted-light dark:text-neutral-400 mt-2">{post.data.description}</p>
    </header>

    <!-- Post Content -->
    <article class="prose prose-slate dark:prose-invert max-w-none">
      <Content />
    </article>

    <div class="flex mt-8">
      <a 
        href="/posts" 
        class="flex gap-2 px-4 py-2 border border-border-light dark:border-neutral-700 
        bg-secondary-light dark:bg-neutral-900 text-text-light dark:text-neutral-100 
        rounded-lg  transition-all duration-300"
      >
      <svg width="20" height="20" fill="currentColor">
        <path d="M10 3l-7 7 7 7m-7-7h14"></path>
      </svg>
        Back
      </a>
    </div>

    <!-- Rekomendasi Post Lainnya -->
    <section class="mt-12">
      <h2 class="text-xl font-semibold text-text-light dark:text-neutral-100">Baca Juga Tulisan Lainnya:</h2>
      <div class="grid gap-4 mt-4">
        {otherPosts.slice(0, 5).map((otherPost) => (
          <a 
          href={`/posts/${otherPost.slug}`} 
          class="flex flex-col gap-2 p-4 border border-border-light dark:border-neutral-700 
          bg-secondary-light dark:bg-neutral-900 rounded-md transition-all duration-300 
          hover:-translate-y-1 hover:shadow-md dark:hover:shadow-none"
          >
            <div class="flex gap-2">
          <img
            src={otherPost.data.image}
            alt={otherPost.data.title}
            class="w-16 h-16 object-cover rounded-md"
          />
            <p class="text-lg my-auto font-medium text-text-light dark:text-neutral-100">
              {otherPost.data.title}
            </p>
            </div>
            <p class="text-sm text-muted-light dark:text-neutral-400">
              {formatDate(otherPost.data.publishedAt)}
            </p>
          </a>
        ))}
      </div>
    </section>

    <!-- Utterances Comments -->
    <div id="comments" class="mt-8"></div>
  </main>
</Layout>

<!-- Script untuk Utterances -->
<script>
  function loadUtterances() {
    const commentContainer = document.getElementById("comments");

    if (!commentContainer) return;
    if (document.querySelector("script[src='https://utteranc.es/client.js']")) return;

    const script = document.createElement("script");
    script.src = "https://utteranc.es/client.js";
    script.setAttribute("repo", "fujitime/porto"); // Ganti dengan repo GitHub-mu
    script.setAttribute("issue-term", "pathname");
    script.setAttribute("crossorigin", "anonymous");
    script.async = true;

    // Deteksi mode gelap atau terang
    const theme = document.documentElement.classList.contains("dark") ? "icy-dark" : "boxy-light";
    script.setAttribute("theme", theme);

    commentContainer.appendChild(script);
  }

  function updateUtterancesTheme() {
    const iframe = document.querySelector(".utterances-frame");
    if (!iframe) return;

    const newTheme = document.documentElement.classList.contains("dark") ? "icy-dark" : "boxy-light";
    const message = {
      type: "set-theme",
      theme: newTheme
    };

    // Type assertion: pastikan elemen adalah HTMLIFrameElement
    (iframe as HTMLIFrameElement).contentWindow?.postMessage(message, "https://utteranc.es");
  }

  document.addEventListener("astro:after-swap", loadUtterances);
  window.addEventListener("load", loadUtterances);
  window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change", updateUtterancesTheme);
</script>


<style is:global>
  .post h1, .post h2, .post h3, .post h4 {
    color: theme('colors.text.light');
  }

  .dark .post h1, .dark .post h2, .dark .post h3, .dark .post h4 {
    color: theme('colors.neutral.100');
  }

  .post a {
    color: theme('colors.accent.light');
    text-decoration: underline;
  }

  .dark .post a {
    color: theme('colors.orange.500');
  }

  .post pre {
    background-color: theme('colors.secondary.light');
    border-radius: 0.375rem;
    padding: 1rem;
    overflow-x: auto;
  }

  .dark .post pre {
    background-color: theme('colors.neutral.900');
  }
</style>
