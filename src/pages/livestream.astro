---
import Layout from "@/layouts/Layout.astro";

// Ambil API Key dan Channel ID dari environment variables
const API_KEY = import.meta.env.YOUTUBE_API_KEY;
const CHANNEL_ID = import.meta.env.YOUTUBE_CHANNEL_ID;

// Tipe data untuk video yang akan diambil dari YouTube API
interface YouTubeVideo {
  id: { videoId: string };
  snippet: {
    title: string;
    thumbnails: { medium: { url: string } };
    publishedAt: string;
  };
}

interface YouTubeChannel {
  snippet: {
    title: string;
    description: string;
    thumbnails: {
[x: string]: any; medium: { url: string } 
};
  };
  statistics: {
    subscriberCount: string;
  };
}

interface YouTubeApiResponse {
  items: YouTubeVideo[];
}

interface YouTubeChannelResponse {
  items: YouTubeChannel[];
}

// Fetch data dari YouTube API untuk video
const fetchVideos = async (): Promise<YouTubeVideo[]> => {
  try {
    const url = new URL('https://www.googleapis.com/youtube/v3/search');
    url.searchParams.set('key', API_KEY);
    url.searchParams.set('channelId', CHANNEL_ID);
    url.searchParams.set('part', 'snippet');
    url.searchParams.set('type', 'video');
    url.searchParams.set('eventType', 'completed');
    url.searchParams.set('maxResults', '100');
    url.searchParams.set('order', 'date');

    const res = await fetch(url.toString());
    if (!res.ok) {
      throw new Error(`HTTP error! Status: ${res.status}`);
    }

    const data: YouTubeApiResponse = await res.json();
    return data.items;
  } catch (error) {
    console.error("Gagal mengambil data YouTube:", error);
    return [];
  }
};

// Fetch data dari YouTube API untuk channel
const fetchChannel = async (): Promise<YouTubeChannel | null> => {
  try {
    const url = new URL('https://www.googleapis.com/youtube/v3/channels');
    url.searchParams.set('key', API_KEY);
    url.searchParams.set('id', CHANNEL_ID);
    url.searchParams.set('part', 'snippet,statistics');

    const res = await fetch(url.toString());
    if (!res.ok) {
      throw new Error(`HTTP error! Status: ${res.status}`);
    }

    const data: YouTubeChannelResponse = await res.json();
    return data.items.length > 0 ? data.items[0] : null;
  } catch (error) {
    console.error("Gagal mengambil data channel YouTube:", error);
    return null;
  }
}

let allVideos: YouTubeVideo[] = [];
let channelInfo: YouTubeChannel | null = null;

// Fetch all videos and channel data
allVideos = await fetchVideos();
channelInfo = await fetchChannel();

// Sort videos by published date (newest first)
allVideos = allVideos.sort((a, b) => {
  const dateA = new Date(a.snippet.publishedAt).getTime();
  const dateB = new Date(b.snippet.publishedAt).getTime();
  return dateB - dateA;
});
---

<Layout title="Live Stream Log">
  <main class="flex flex-col items-center justify-center min-h-screen px-4 py-8">
    {channelInfo ? (
      <a href={`https://www.youtube.com/channel/${CHANNEL_ID}`} target="_blank" class="w-full max-w-4xl p-6 bg-white dark:bg-neutral-800 rounded-lg shadow-md mb-8">
        <div class="flex items-center gap-4">
          {/* Menampilkan gambar profil channel */}
          <img
            src={channelInfo.snippet.thumbnails.high?.url || '/default-profile.png'}  
            alt={channelInfo.snippet.title}
            class="w-24 h-24 rounded-full object-cover"
          />
          <div class="flex flex-col">
            <h2 class="text-2xl font-semibold text-text-light dark:text-neutral-100">
              {channelInfo.snippet.title}
            </h2>
            <p class="text-sm text-neutral-500 dark:text-neutral-400">
              {channelInfo.snippet.description.slice(0, 150)}...
            </p>
            <p class="text-sm text-neutral-600 dark:text-neutral-300">
              {channelInfo.statistics.subscriberCount} Subscribers
            </p>
          </div>
        </div>
      </a>
    ) : (
      <p class="text-neutral-500 dark:text-neutral-400">Gagal mengambil data channel.</p>
    )}
    
       <h1 class="text-3xl font-bold text-text-light dark:text-neutral-100 mb-6 flex items-center gap-3">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 20 20" class="text-accent-light dark:text-accent-dark">
          <path fill="currentColor" d="M5.453 4.167a.726.726 0 0 0-1.027-.01A8.23 8.23 0 0 0 2 10a8.23 8.23 0 0 0 2.604 6.015a.725.725 0 0 0 1.01-.025c.316-.316.277-.819-.027-1.11A6.73 6.73 0 0 1 3.5 10c0-1.846.741-3.52 1.943-4.738c.29-.295.32-.785.01-1.095M7.214 5.93a.714.714 0 0 0-1.008-.016A5.73 5.73 0 0 0 4.5 10c0 1.692.73 3.213 1.893 4.265a.713.713 0 0 0 .983-.038c.328-.328.267-.844-.041-1.134A4.24 4.24 0 0 1 6 10c0-1.15.457-2.194 1.2-2.96c.286-.294.333-.793.014-1.111m5.572 0a.714.714 0 0 1 1.008-.016A5.73 5.73 0 0 1 15.5 10c0 1.692-.73 3.213-1.893 4.265a.713.713 0 0 1-.983-.038c-.328-.328-.267-.844.041-1.134A4.24 4.24 0 0 0 14 10c0-1.15-.457-2.194-1.2-2.96c-.286-.294-.333-.793-.014-1.111m1.761-1.762a.726.726 0 0 1 1.027-.01A8.23 8.23 0 0 1 18 10a8.23 8.23 0 0 1-2.604 6.015a.725.725 0 0 1-1.01-.025c-.316-.316-.277-.819.028-1.11A6.73 6.73 0 0 0 16.5 10c0-1.846-.741-3.52-1.943-4.738c-.29-.295-.32-.785-.01-1.095M10 8.5a1.5 1.5 0 1 0 0 3a1.5 1.5 0 0 0 0-3"/>
        </svg>
        <span>Live Stream Log</span>
      </h1>

    {/* Daftar Video */}
    {allVideos.length > 0 ? (
      <div class="flex flex-col gap-6 w-full max-w-4xl">
        {allVideos.map((video) => (
          <a
            href={`https://www.youtube.com/watch?v=${video.id.videoId}`}
            target="_blank"
            class="flex items-start gap-4 p-4 border rounded-lg hover:bg-neutral-200 dark:hover:bg-neutral-800 transition-all"
          >
            <img
              src={video.snippet.thumbnails.medium.url}
              alt={video.snippet.title}
              class="w-full max-w-[80px] h-auto rounded-lg object-cover" 
            />
            <div class="flex flex-col">
              <h3 class="text-lg font-medium text-text-light dark:text-neutral-100">
                {video.snippet.title}
              </h3>
              <p class="text-sm text-neutral-500 dark:text-neutral-400">
                {new Date(video.snippet.publishedAt).toLocaleDateString()}
              </p>
            </div>
          </a>
        ))}
      </div>
    ) : (
      <p class="text-neutral-500 dark:text-neutral-400">Belum ada live stream terbaru.</p>
    )}
  </main>
</Layout>
